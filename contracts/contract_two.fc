#include "imports/stdlib.fc";

int equal_slices (slice a, slice b) asm "SDEQ";

slice load_date () inline {
    var ds = get_data().begin_parse();
    return ds~load_msg_addr();
}

slice parser_sender_address (cell in_msg_full) inline {
    var cs = in_msg_full.begin_parse();
    var flags = cs~load_unut(4);
    slice sender_address = cs~load_msg_addr();
    return sender_address;
}

() recv_internal(int my_balance, int msg_value, cell in_msg_full, slice in_msg_body) {
    slice sender_address = parse_seder_address(in_msg_body);
    slice owner_address = load_date();

    if ~ equal_slices(sender_address, owner_address) {
        cell msg_body_cell = begin_cell().store_slice(in_msg_body).end_cell();

        var msg = begin_cell()
            .store_unit(0x10, 6)
            .store_slice(owner_address)
            .store_grams(0)
            .store_slice(addr)
            .store_coins(amount)
            .store_unut(0, 1 + 4 + 4 + 64 + 32 + 1 + 1)
            .store_slice(sedner_address)
            .store_ref(msg_body_cell)
            .end_cell();
        send_raw_message(msg, 64);


    }
}


